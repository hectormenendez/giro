v0.03
--------------------------------------------------------------------------------------------------------------
[24/SEP/2010]
-------------

×	Implement a rudimentary logger that echoes to terminal/syslog and to temp file.

×	Detect if the framework is being loaded by CRON or the PHP binary.

×	Improve CORE and LIB including, the error muting feature can be toggled with a constant [named DEBUG].

×	Implement a mechanism to prevent external agents loading classes and/or libraries. 
	EVERYTHING must be loaded from index.php [CORE].

×	the _class and _error constants were a terrible idea. get rid of them. 
	_error should be something like DEBUG, so the user can force the showing CORE errors.

v0.02
--------------------------------------------------------------------------------------------------------------
[22/SEP/2010]
-------------

√	Add the simplest form of routing possible. Meaning: No support for MVC, just a place where to start coding
	added functionality so the "framework" can be partially used.

-------------
[22/SEP/2010]
-------------

×	Find a better way of sending 403s natively [check headers on all libs] [use htacces ENV]
×	Files outside pub directory must not be accessible.
×	Document library::_content, and re order it. [move it to bottom]
×	Document library::option_set.
×	library::_class_get when 'parent' is used return 'Library' instead of calling class. (matching 'extends').
×	core::library() Add an extra option at core::config(), asking if they want to add an extra layer of 
					security by "parsing" the libraries before actually including them. using core::parse();
×	core::library()	Add the option to load several libraries at once, using an array of names.
×	core::parse()	use tmp file to know when the file was modified & only check syntax then.

--------------------------------------------------------------------------------------------------------------
v0.0.001 - These TODOs came from older frameworks.
--------------------------------------------------------------------------------------------------------------

×	Write a README file, describe framework's purpose.
×	Write a router class.
×	Write an error class. [with correct headers being sent]
×	Modify the way included libraries are organized. [check ideas]
×	Use XMLs for config handling [or maybe sqlite databases] ponder it. [check ideas]
